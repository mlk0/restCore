<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <!--
    If a web.config file is present in the project, the file is transformed with the correct processPath and arguments to configure the ASP.NET Core Module and moved to published output. 
    The transformation doesn't modify IIS configuration settings in the file.
    To prevent the Web SDK from transforming the web.config file, use the <IsTransformWebConfigDisabled> property in the project file 
    <IsTransformWebConfigDisabled>true</IsTransformWebConfigDisabled> -->
  </PropertyGroup>

  <ItemGroup>
    <Folder Include="wwwroot\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="6.2.2" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="3.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.6" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="2.0.1" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\httpClient.core\httpClient.core.csproj" />
  </ItemGroup>

  <Target Name="CreateLogsFolder" AfterTargets="Publish">
    <MakeDir Directories="$(PublishDir)Logs" Condition="!Exists('$(PublishDir)Logs')" />
    <WriteLinesToFile File="$(PublishDir)Logs\.log" Lines="Post Publish Generated file" Overwrite="True" Condition="!Exists('$(PublishDir)Logs\.log')" />
  </Target>
</Project>
